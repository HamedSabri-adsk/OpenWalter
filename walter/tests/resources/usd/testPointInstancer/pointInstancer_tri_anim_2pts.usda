#usda 1.0
(
    defaultPrim = "FxAsset"
    endTimeCode = 48
    startTimeCode = 0
    upAxis = "Y"
)

def Xform "FxAsset" (
    customData = {
        bool zUp = 0
    }
    kind = "component"
)
{
    def PointInstancer "instances_0"
    {
        float3[] extent.timeSamples = {
            0: [(-1.5, 0, -1.6166798), (1.5, 0.5, 0.999423)],
            1: [(-1.5, 0, -1.6166798), (1.5, 0.5, 0.999423)],
            2: [(-1.5, 0, -1.6642292), (1.5, 0.5, 1.0288178)],
            3: [(-1.5, 0, -1.7117785), (1.5, 0.5, 1.0582126)],
            4: [(-1.5, 0, -1.759328), (1.5, 0.5, 1.0876074)],
            5: [(-1.5, 0, -1.8068774), (1.5, 0.5, 1.1170021)],
            6: [(-1.5, 0, -1.8544269), (1.5, 0.5, 1.146397)],
            7: [(-1.5, 0, -1.9019762), (1.5, 0.5, 1.1757917)],
            8: [(-1.5, 0, -1.9495256), (1.5, 0.5, 1.2051866)],
            9: [(-1.5, 0, -1.997075), (1.5, 0.5, 1.2345814)],
            10: [(-1.5, 0, -2.0446246), (1.5, 0.5, 1.2639762)],
            11: [(-1.5, 0, -2.0921738), (1.5, 0.5, 1.293371)],
            12: [(-1.5, 0, -2.1397233), (1.5, 0.5, 1.3227657)],
            13: [(-1.5, 0, -2.1872725), (1.5, 0.5, 1.3521606)],
            14: [(-1.5, 0, -2.234822), (1.5, 0.5, 1.3815553)],
            15: [(-1.5, 0, -2.2823715), (1.5, 0.5, 1.4109502)],
            16: [(-1.5, 0, -2.329921), (1.5, 0.5, 1.4403449)],
            17: [(-1.5, 0, -2.3774703), (1.5, 0.5, 1.4697398)],
            18: [(-1.5, 0, -2.4250195), (1.5, 0.5, 1.4991345)],
            19: [(-1.5, 0, -2.472569), (1.5, 0.5, 1.5285293)],
            20: [(-1.5, 0, -2.5201185), (1.5, 0.5, 1.5579242)],
            21: [(-1.5, 0, -2.567668), (1.5, 0.5, 1.5873189)],
            22: [(-1.5, 0, -2.6152172), (1.5, 0.5, 1.6167138)],
            23: [(-1.5, 0, -2.6627667), (1.5, 0.5, 1.6461085)],
            24: [(-1.5, 0, -1.5691303), (1.5, 0.5, 0.9700282)],
            25: [(-1.5, 0, -1.6166798), (1.5, 0.5, 0.999423)],
            26: [(-1.5, 0, -1.6642292), (1.5, 0.5, 1.0288178)],
            27: [(-1.5, 0, -1.7117785), (1.5, 0.5, 1.0582126)],
            28: [(-1.5, 0, -1.759328), (1.5, 0.5, 1.0876074)],
            29: [(-1.5, 0, -1.8068774), (1.5, 0.5, 1.1170021)],
            30: [(-1.5, 0, -1.8544269), (1.5, 0.5, 1.146397)],
            31: [(-1.5, 0, -1.9019762), (1.5, 0.5, 1.1757917)],
            32: [(-1.5, 0, -1.9495256), (1.5, 0.5, 1.2051866)],
            33: [(-1.5, 0, -1.997075), (1.5, 0.5, 1.2345814)],
            34: [(-1.5, 0, -2.0446246), (1.5, 0.5, 1.2639762)],
            35: [(-1.5, 0, -2.0921738), (1.5, 0.5, 1.293371)],
            36: [(-1.5, 0, -2.1397233), (1.5, 0.5, 1.3227657)],
            37: [(-1.5, 0, -2.1872725), (1.5, 0.5, 1.3521606)],
            38: [(-1.5, 0, -2.234822), (1.5, 0.5, 1.3815553)],
            39: [(-1.5, 0, -2.2823715), (1.5, 0.5, 1.4109502)],
            40: [(-1.5, 0, -2.329921), (1.5, 0.5, 1.4403449)],
            41: [(-1.5223415, 0, -2.3774703), (1.5, 0.5, 1.4697398)],
            42: [(-1.5627882, 0, -2.4250195), (1.5, 0.5, 1.4991345)],
            43: [(-1.6032351, 0, -2.472569), (1.5, 0.5, 1.5285293)],
            44: [(-1.643682, 0, -2.5201185), (1.5, 0.5, 1.5579242)],
            45: [(-1.6841289, 0, -2.567668), (1.5, 0.5, 1.5873189)],
            46: [(-1.7245756, 0, -2.6152172), (1.5, 0.5, 1.6167138)],
            47: [(-1.7650224, 0, -2.6627667), (1.5, 0.5, 1.6461085)],
            48: [(-1.8054693, 0, -1.6755033), (1.5, 0.5, 0.9700282)],
        }
        quath[] orientations = []
        quath[] orientations.timeSamples = {
            0: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            1: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            2: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            3: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            4: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            5: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            6: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            7: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            8: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            9: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            10: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            11: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            12: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            13: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            14: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            15: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            16: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            17: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            18: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            19: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            20: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            21: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            22: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            23: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            24: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            25: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            26: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            27: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            28: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            29: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            30: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            31: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            32: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            33: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            34: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            35: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            36: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            37: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            38: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            39: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            40: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            41: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            42: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            43: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            44: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            45: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            46: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            47: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
            48: [(1, 0, 0, 0), (0.809082, 0, 0.587891, 0), (0.309082, 0, 0.951172, 0), (-0.309082, 0, 0.951172, 0)],
        }
        point3f[] positions = []
        point3f[] positions.timeSamples = {
            0: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            1: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            2: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            3: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            4: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            5: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            6: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            7: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            8: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            9: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            10: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            11: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            12: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            13: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            14: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            15: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            16: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            17: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            18: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            19: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            20: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            21: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            22: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            23: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            24: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            25: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            26: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            27: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            28: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            29: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            30: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            31: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            32: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            33: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            34: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            35: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            36: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            37: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            38: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            39: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            40: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            41: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            42: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            43: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            44: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            45: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            46: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            47: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
            48: [(-1.5, 0, 0), (-0.5, 0, 0), (0.5, 0, 0), (1.5, 0, 0)],
        }
        color3f[] primvars:Cd (
            interpolation = "uniform"
        )
        color3f[] primvars:Cd.timeSamples = {
            0: [(0.6416006, 0.8795059, 0.5957402), (0.8004638, 0.2050401, 0.8280058), (0.510895, 0.52206063, 0.90459657), (0.7754743, 0.88505626, 0.40196812)],
        }
        int[] protoIndices = []
        int[] protoIndices.timeSamples = {
            0: [0, 1, 0, 1],
            1: [0, 1, 0, 1],
            2: [0, 1, 0, 1],
            3: [0, 1, 0, 1],
            4: [0, 1, 0, 1],
            5: [0, 1, 0, 1],
            6: [0, 1, 0, 1],
            7: [0, 1, 0, 1],
            8: [0, 1, 0, 1],
            9: [0, 1, 0, 1],
            10: [0, 1, 0, 1],
            11: [0, 1, 0, 1],
            12: [0, 1, 0, 1],
            13: [0, 1, 0, 1],
            14: [0, 1, 0, 1],
            15: [0, 1, 0, 1],
            16: [0, 1, 0, 1],
            17: [0, 1, 0, 1],
            18: [0, 1, 0, 1],
            19: [0, 1, 0, 1],
            20: [0, 1, 0, 1],
            21: [0, 1, 0, 1],
            22: [0, 1, 0, 1],
            23: [0, 1, 0, 1],
            24: [0, 1, 0, 1],
            25: [0, 1, 0, 1],
            26: [0, 1, 0, 1],
            27: [0, 1, 0, 1],
            28: [0, 1, 0, 1],
            29: [0, 1, 0, 1],
            30: [0, 1, 0, 1],
            31: [0, 1, 0, 1],
            32: [0, 1, 0, 1],
            33: [0, 1, 0, 1],
            34: [0, 1, 0, 1],
            35: [0, 1, 0, 1],
            36: [0, 1, 0, 1],
            37: [0, 1, 0, 1],
            38: [0, 1, 0, 1],
            39: [0, 1, 0, 1],
            40: [0, 1, 0, 1],
            41: [0, 1, 0, 1],
            42: [0, 1, 0, 1],
            43: [0, 1, 0, 1],
            44: [0, 1, 0, 1],
            45: [0, 1, 0, 1],
            46: [0, 1, 0, 1],
            47: [0, 1, 0, 1],
            48: [0, 1, 0, 1],
        }
        prepend rel prototypes = [
            </FxAsset/instances_0/Prototypes/prototype_0>,
            </FxAsset/instances_0/Prototypes/prototype_1>,
        ]
        float3[] scales = []
        float3[] scales.timeSamples = {
            0: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            1: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            2: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            3: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            4: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            5: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            6: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            7: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            8: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            9: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            10: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            11: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            12: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            13: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            14: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            15: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            16: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            17: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            18: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            19: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            20: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            21: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            22: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            23: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            24: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            25: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            26: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            27: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            28: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            29: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            30: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            31: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            32: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            33: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            34: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            35: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            36: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            37: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            38: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            39: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            40: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            41: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            42: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            43: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            44: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            45: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            46: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            47: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
            48: [(0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)],
        }

        def Xform "Prototypes"
        {
            def Xform "prototype_0"
            {
                def "triangle" (
                    prepend references = @./triangle.usda@</triangle>
                )
                {
                }
            }

            def Xform "prototype_1"
            {
                def "triangle" (
                    prepend references = @./triangle_time_offset.usda@</triangle>
                )
                {
                }
            }
        }
    }
}

